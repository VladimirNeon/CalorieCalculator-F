{"ast":null,"code":"const BASE_URL = \"http://localhost:8080\";\n\n// Отримати токен із localStorage\nconst getToken = () => localStorage.getItem(\"token\");\n\n// Функція для запитів із токеном\nconst apiFetch = async (endpoint, options = {}) => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    ...options.headers,\n    ...(getToken() && {\n      Authorization: `Bearer ${getToken()}`\n    }) // Додаємо токен в заголовок\n  };\n  const response = await fetch(`${BASE_URL}${endpoint}`, {\n    ...options,\n    headers\n  });\n\n  // Якщо сервер повертає помилку 401 (неавторизовано), перенаправляємо на сторінку входу\n  if (response.status === 401) {\n    window.location.href = \"/login\";\n  }\n  if (!response.ok) {\n    throw new Error(`HTTP error! Status: ${response.status}`);\n  }\n  return response.json();\n};\n\n// API-запити\n\n// Отримати список інгредієнтів\nexport const fetchIngredients = async () => {\n  return apiFetch(\"/ingredients\");\n};\n\n// Додати новий інгредієнт\nexport const addIngredient = async ingredient => {\n  return apiFetch(\"/ingredients\", {\n    method: \"POST\",\n    body: JSON.stringify(ingredient)\n  });\n};\n\n// Видалити інгредієнт за ID\nexport const deleteIngredient = async id => {\n  return apiFetch(`/ingredients/${id}`, {\n    method: \"DELETE\"\n  });\n};\n\n// Отримати список страв\nexport const fetchDishes = async () => {\n  return apiFetch(\"/dishes\");\n};\n\n// Додати нову страву\nexport const addDish = async dish => {\n  return apiFetch(\"/dishes\", {\n    method: \"POST\",\n    body: JSON.stringify(dish)\n  });\n};\n\n// Видалити страву за ID\nexport const deleteDish = async id => {\n  return apiFetch(`/dishes/${id}`, {\n    method: \"DELETE\"\n  });\n};\n\n// Отримати список меню\nexport const fetchMenus = async () => {\n  return apiFetch(\"/menus\");\n};\n\n// Додати нове меню\nexport const addMenu = async menu => {\n  return apiFetch(\"/menus\", {\n    method: \"POST\",\n    body: JSON.stringify(menu)\n  });\n};\n\n// Видалити меню за ID\nexport const deleteMenu = async id => {\n  return apiFetch(`/menus/${id}`, {\n    method: \"DELETE\"\n  });\n};\n\n// Отримати список клієнтів\nexport const fetchClients = async () => {\n  return apiFetch(\"/clients\");\n};\n\n// Додати нового клієнта\nexport const addClient = async client => {\n  return apiFetch(\"/clients\", {\n    method: \"POST\",\n    body: JSON.stringify(client)\n  });\n};\n\n// Видалити клієнта за ID\nexport const deleteClient = async id => {\n  return apiFetch(`/clients/${id}`, {\n    method: \"DELETE\"\n  });\n};\n\n// Знайти меню для клієнта\nexport const findMenuForClient = async clientId => {\n  return apiFetch(`/menus/closest/${clientId}`);\n};\n\n// Знайти клієнта за ID\nexport const fetchClientById = async id => {\n  return apiFetch(`/clients/${id}`);\n};\n\n// Оновити дані клієнта\nexport const updateClient = async (id, updatedData) => {\n  return apiFetch(`/clients/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(updatedData)\n  });\n};\n\n// Отримати всіх користувачів\nexport const fetchUsers = async () => {\n  return apiFetch(\"/admin/users\");\n};\n\n// Видалити користувача за ID\nexport const deleteUser = async id => {\n  return apiFetch(`/admin/users/${id}`, {\n    method: \"DELETE\"\n  });\n};","map":{"version":3,"names":["BASE_URL","getToken","localStorage","getItem","apiFetch","endpoint","options","headers","Authorization","response","fetch","status","window","location","href","ok","Error","json","fetchIngredients","addIngredient","ingredient","method","body","JSON","stringify","deleteIngredient","id","fetchDishes","addDish","dish","deleteDish","fetchMenus","addMenu","menu","deleteMenu","fetchClients","addClient","client","deleteClient","findMenuForClient","clientId","fetchClientById","updateClient","updatedData","fetchUsers","deleteUser"],"sources":["C:/Users/Boss/Desktop/second/src/main/resources/src/api/api.js"],"sourcesContent":["const BASE_URL = \"http://localhost:8080\";\r\n\r\n// Отримати токен із localStorage\r\nconst getToken = () => localStorage.getItem(\"token\");\r\n\r\n// Функція для запитів із токеном\r\nconst apiFetch = async (endpoint, options = {}) => {\r\n    const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n        ...options.headers,\r\n        ...(getToken() && { Authorization: `Bearer ${getToken()}` }), // Додаємо токен в заголовок\r\n    };\r\n\r\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n        ...options,\r\n        headers,\r\n    });\r\n\r\n    // Якщо сервер повертає помилку 401 (неавторизовано), перенаправляємо на сторінку входу\r\n    if (response.status === 401) {\r\n        window.location.href = \"/login\";\r\n    }\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\n// API-запити\r\n\r\n// Отримати список інгредієнтів\r\nexport const fetchIngredients = async () => {\r\n    return apiFetch(\"/ingredients\");\r\n};\r\n\r\n// Додати новий інгредієнт\r\nexport const addIngredient = async (ingredient) => {\r\n    return apiFetch(\"/ingredients\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(ingredient),\r\n    });\r\n};\r\n\r\n// Видалити інгредієнт за ID\r\nexport const deleteIngredient = async (id) => {\r\n    return apiFetch(`/ingredients/${id}`, {\r\n        method: \"DELETE\",\r\n    });\r\n};\r\n\r\n// Отримати список страв\r\nexport const fetchDishes = async () => {\r\n    return apiFetch(\"/dishes\");\r\n};\r\n\r\n// Додати нову страву\r\nexport const addDish = async (dish) => {\r\n    return apiFetch(\"/dishes\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(dish),\r\n    });\r\n};\r\n\r\n// Видалити страву за ID\r\nexport const deleteDish = async (id) => {\r\n    return apiFetch(`/dishes/${id}`, {\r\n        method: \"DELETE\",\r\n    });\r\n};\r\n\r\n// Отримати список меню\r\nexport const fetchMenus = async () => {\r\n    return apiFetch(\"/menus\");\r\n};\r\n\r\n// Додати нове меню\r\nexport const addMenu = async (menu) => {\r\n    return apiFetch(\"/menus\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(menu),\r\n    });\r\n};\r\n\r\n// Видалити меню за ID\r\nexport const deleteMenu = async (id) => {\r\n    return apiFetch(`/menus/${id}`, {\r\n        method: \"DELETE\",\r\n    });\r\n};\r\n\r\n// Отримати список клієнтів\r\nexport const fetchClients = async () => {\r\n    return apiFetch(\"/clients\");\r\n};\r\n\r\n// Додати нового клієнта\r\nexport const addClient = async (client) => {\r\n    return apiFetch(\"/clients\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(client),\r\n    });\r\n};\r\n\r\n// Видалити клієнта за ID\r\nexport const deleteClient = async (id) => {\r\n    return apiFetch(`/clients/${id}`, {\r\n        method: \"DELETE\",\r\n    });\r\n};\r\n\r\n// Знайти меню для клієнта\r\nexport const findMenuForClient = async (clientId) => {\r\n    return apiFetch(`/menus/closest/${clientId}`);\r\n};\r\n\r\n// Знайти клієнта за ID\r\nexport const fetchClientById = async (id) => {\r\n    return apiFetch(`/clients/${id}`);\r\n};\r\n\r\n// Оновити дані клієнта\r\nexport const updateClient = async (id, updatedData) => {\r\n    return apiFetch(`/clients/${id}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updatedData),\r\n    });\r\n};\r\n\r\n// Отримати всіх користувачів\r\nexport const fetchUsers = async () => {\r\n    return apiFetch(\"/admin/users\");\r\n};\r\n\r\n// Видалити користувача за ID\r\nexport const deleteUser = async (id) => {\r\n    return apiFetch(`/admin/users/${id}`, {\r\n        method: \"DELETE\",\r\n    });\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}